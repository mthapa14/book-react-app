{"version":3,"sources":["images/harrypotter.jpg","images/spiderman.jpg","images/blackhammer.jpg","images/venom.jpg","images/avenger.jpg","images/wasp.jpg","images/batman.jpg","components/BookList.js","components/BookDetails.js","components/BookRoute.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BookList","className","this","props","books","map","book","key","name","src","alt","class","to","type","Component","BookDetails","author","country","language","genere","date","plot","BookRoute","exact","path","render","match","params","currentBook","find","toLowerCase","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","App","defaultProps","harrypotter","spiderman","blackhammer","venom","avenger","wasp","batman","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a2d392a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/harrypotter.9e76b652.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spiderman.0b9324c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blackhammer.1fe344ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/venom.5827aaf9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avenger.ecc194d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wasp.d1feba84.jpg\";","module.exports = __webpack_public_path__ + \"static/media/batman.e72d5cac.jpg\";","import React, { Component } from 'react';\r\nimport \"../css/BookList.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass BookList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"BookList\">\r\n                <h1 className=\"text-center mb-3 mt-3\">My Favourite Comic Book Lists</h1>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {this.props.books.map(book => (\r\n                            <div className=\"Book col-md-3 align-item-center card mt-2\" key={book.name}>\r\n                                <img src={book.src} alt={book.src} class=\"img-thumbnail rounded poster\"/>\r\n                                <h4>{book.name}</h4>\r\n                                <Link to={`/books/${book.name}`}><button type=\"button\" className=\"btn btn-light mb-2\">Learn More</button></Link>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookList;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nclass BookDetails extends Component {\r\n    render() {\r\n        let {book} = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"BookDetails row justify-content-center mt-4 mb-4\">\r\n                    <div className=\"col-md-6\">\r\n                        <img src={book.src} alt={book.src} class=\"img-thumbnail rounded\"/>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"BookDetails-card card\">\r\n                            <div className=\"card-body\">\r\n                                <h1 className=\"card-title\">{book.name}</h1>\r\n                                <h4 className=\"card-subtitle text-muted\">{book.author}</h4>\r\n                            </div>\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Country: {book.country}</li>\r\n                                <li className=\"list-group-item\">Language: {book.language}</li>\r\n                                <li className=\"list-group-item\">Genere: {book.genere}</li>\r\n                                <li className=\"list-group-item\">Date: {book.date}</li>\r\n                            </ul>\r\n                            <div className=\"card-body\">\r\n                                <p>Plot of the Story</p>\r\n                                <p>{book.plot}</p>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                            <Link to='/books'><button type=\"button\" className=\"btn btn-secondary\">Go Back</button></Link>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default BookDetails;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport BookList from './BookList';\r\nimport BookDetails from './BookDetails';\r\n\r\n\r\nclass BookRoute extends Component {\r\n    render() {\r\n        const getName = props => {\r\n            let name = props.match.params.name;\r\n            let currentBook = this.props.books.find(\r\n              book => book.name.toLowerCase() === name.toLowerCase()\r\n            );\r\n            return <BookDetails {...props} book={currentBook}/>;\r\n          }\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/books' render={()=> <BookList books={this.props.books}/>}/>\r\n                <Route exact path='/books/:name' render={getName}/>\r\n                <Redirect to=\"/books\"/>\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookRoute;\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <NavLink to='/books' className=\"navbar-brand\">Book Navbar</NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <NavLink exact to=\"/books\" className=\"nav-item nav-link active\">Home</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </nav>               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\nimport BookRoute from './components/BookRoute';\nimport './App.css';\n\nimport Navbar from './components/Navbar';\n\nimport harrypotter from './images/harrypotter.jpg';\nimport spiderman from './images/spiderman.jpg';\nimport blackhammer from './images/blackhammer.jpg';\nimport venom from './images/venom.jpg';\nimport avenger from './images/avenger.jpg';\nimport wasp from './images/wasp.jpg';\nimport batman from './images/batman.jpg';\n\n\nclass App extends Component {\n  static defaultProps = {\n    books: [\n      {\n        name: 'HarryPotter',\n        src: harrypotter,\n        author: 'J.K. Rowling',\n        country: 'United Kingdom',\n        language: 'English',\n        genere: 'Fantasy',\n        date: '26 June 1997',\n        plot: 'The central character in the series is Harry Potter, a boy who lives in the fictional town of Little Whinging, Surrey with his aunt, uncle, and cousin - the Dursleys - and discovers at the age of eleven that he is a wizard, though he lives in the ordinary world of non-magical people known as Muggles. The wizarding world exists parallel to the Muggle world, albeit hidden and in secrecy.'\n      },\n      {\n        name: 'SpiderMan',\n        src: spiderman,\n        author: 'Stan lee, Steve Ditko',\n        country: 'United States',\n        language: 'English',\n        genere: 'Superhero',\n        date: 'August 1962',\n        plot: 'Spider-Man is fictional superhero created by writer editor Steve Ditko. In the stories, Spider-Man is the alias of Peter Parker, an orphan raised by his aunt May and uncle Ben in New York City after his parents Richard and Mary Parker died in a plane crash. His origin story has him acquiring spider-related abilities after a bite from a radioactive spider-sense.'\n      },\n      {\n        name: 'BlackHammer',\n        src: blackhammer,\n        author: 'Jeff Lemire',\n        country: 'United States',\n        language: 'English',\n        genere: 'Superhero',\n        date: 'July 2016 - Present',\n        plot: 'Ten years ago, Black Hammer and six other superheroes had saved Spiral City from the Anti-God, but in process became trapped in Rockwood, a timeless Twilight Zone-ish town. Shortly after the heroes arrive, Black Hammer dies. In the present, the six heroes live on Black Hammer farm with very little hope of ever escaping Rockwood.'\n      },\n      {\n        name: 'Venom',\n        src: venom,\n        author: 'Randy Schueller, Roger Stern',\n        country: 'United States',\n        language: 'English',\n        genere: 'Superhero',\n        date: 'May 1984',\n        plot: 'Venom is a fictional character appearing in American comic books published by Marvel Comics, commonly in association with Spider-Man. The character is a sentient alien symbiote with an amorphous, liquid-like form, who survives by bonding with a host, usually human. This dual-life form receives enhanced powers and usually refers to itself as \"Venom\".'\n      },\n      {\n        name: 'Avengers',\n        src: avenger,\n        author: 'Stan lee, Jack Kirby',\n        country: 'United States',\n        language: 'English',\n        genere: 'Superhero',\n        date: 'September 1963',\n        plot: 'The Avengers are a fictional team of superheroes appearing in American comic books published by Marvel Comics. The team made its debut in The Avengers #1 (cover-dated Sept. 1963), created by writer-editor Stan Lee and artist/co-plotter Jack Kirby. The Avengers is Lee and Kirby renovation of a previous superhero team, All-Winners Squad, who appeared in comic books series published by Marvel Comics predecessor Timely Comics.'\n      },\n      {\n        name: 'The Unstoppable Wasp',\n        src: wasp,\n        author: 'Mark Waid, Alan Davis',\n        country: 'United States',\n        language: 'English',\n        genere: 'Action, Superhero',\n        date: 'July 2016',\n        plot: 'Nadia van Dyne is the Marvel Comics version of the Hope van Dyne seen in the Marvel Cinematic Universe and briefly had her own comic, The Unstoppable Wasp, but it was cancelled after eight issues for low sales. A second series with the same title debuted in October 2018. This second series was, in turn, cancelled after ten issues.[1] She also had a 5 issues limited series with Ant-Man in 2018.'\n      },\n      {\n        name: 'BatMan',\n        src: batman,\n        author: 'Bob Kane, Bill Finger',\n        country: 'Gotham City',\n        language: 'English',\n        genere: 'Superhero',\n        date: 'March 1939',\n        plot: 'Batman is a fictional superhero appearing in American comic books published by DC Comics. The character was created by artist Bob Kane and writer Bill Finger,[2][3] and first appeared in Detective Comics #27 in 1939. Originally named the \"Bat-Man,\" the character is also referred to by such epithets as the Caped Crusader, the Dark Knight, and the Worlds Greatest Detective'\n      }\n    ]\n  };\n  render() {\n    return (\n\n      <div>\n        <Navbar books={this.props.books}/>\n        <BookRoute books = {this.props.books}/>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}